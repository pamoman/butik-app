[{"/home/pamo80/dev/projects/butik/butik-app/src/index.js":"1","/home/pamo80/dev/projects/butik/butik-app/src/App.js":"2","/home/pamo80/dev/projects/butik/butik-app/src/serviceWorkerRegistration.js":"3","/home/pamo80/dev/projects/butik/butik-app/src/reportWebVitals.js":"4","/home/pamo80/dev/projects/butik/butik-app/src/theme/Default.js":"5","/home/pamo80/dev/projects/butik/butik-app/src/config/Client.js":"6","/home/pamo80/dev/projects/butik/butik-app/src/components/loading/Loading.js":"7","/home/pamo80/dev/projects/butik/butik-app/src/components/filter/Filter.js":"8","/home/pamo80/dev/projects/butik/butik-app/src/components/messageSystem/Message.js":"9","/home/pamo80/dev/projects/butik/butik-app/src/components/messageSystem/MessageSystem.js":"10","/home/pamo80/dev/projects/butik/butik-app/src/components/header/Header.js":"11","/home/pamo80/dev/projects/butik/butik-app/src/components/footer/Footer.js":"12","/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Login.js":"13","/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Logout.js":"14","/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Forgot.js":"15","/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Reset.js":"16","/home/pamo80/dev/projects/butik/butik-app/src/components/auth/PublicRoute.js":"17","/home/pamo80/dev/projects/butik/butik-app/src/components/auth/PrivateRoute.js":"18","/home/pamo80/dev/projects/butik/butik-app/src/components/auth/auth.js":"19","/home/pamo80/dev/projects/butik/butik-app/src/config/auth.js":"20","/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Styles.js":"21","/home/pamo80/dev/projects/butik/butik-app/src/components/footer/Styles.js":"22","/home/pamo80/dev/projects/butik/butik-app/src/components/header/Styles.js":"23","/home/pamo80/dev/projects/butik/butik-app/src/models/auth/auth.js":"24","/home/pamo80/dev/projects/butik/butik-app/src/components/errorBoundary/ErrorBoundary.js":"25","/home/pamo80/dev/projects/butik/butik-app/src/components/navbar/Navbar.js":"26","/home/pamo80/dev/projects/butik/butik-app/src/models/db/db.js":"27","/home/pamo80/dev/projects/butik/butik-app/src/components/controlbar/Controlbar.js":"28","/home/pamo80/dev/projects/butik/butik-app/src/components/navbar/Styles.js":"29","/home/pamo80/dev/projects/butik/butik-app/src/components/navbar/PrivateNav.js":"30","/home/pamo80/dev/projects/butik/butik-app/src/components/navbar/PublicNav.js":"31","/home/pamo80/dev/projects/butik/butik-app/src/components/controlbar/Styles.js":"32","/home/pamo80/dev/projects/butik/butik-app/src/components/controlbar/RightSwitches.js":"33","/home/pamo80/dev/projects/butik/butik-app/src/components/controlbar/LeftLinks.js":"34","/home/pamo80/dev/projects/butik/butik-app/src/components/controlbar/Selector.js":"35","/home/pamo80/dev/projects/butik/butik-app/src/models/icon/Icon.js":"36","/home/pamo80/dev/projects/butik/butik-app/src/components/messageSystem/Styles.js":"37","/home/pamo80/dev/projects/butik/butik-app/src/components/loading/Styles.js":"38","/home/pamo80/dev/projects/butik/butik-app/src/models/buy/buy.js":"39","/home/pamo80/dev/projects/butik/butik-app/src/models/utils/utils.js":"40","/home/pamo80/dev/projects/butik/butik-app/src/components/basket/Styles.js":"41","/home/pamo80/dev/projects/butik/butik-app/src/components/basket/Basket.js":"42","/home/pamo80/dev/projects/butik/butik-app/src/components/checkout/Styles.js":"43","/home/pamo80/dev/projects/butik/butik-app/src/components/checkout/Checkout.js":"44","/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Register.js":"45","/home/pamo80/dev/projects/butik/butik-app/src/components/me/Me.js":"46","/home/pamo80/dev/projects/butik/butik-app/src/components/me/Styles.js":"47","/home/pamo80/dev/projects/butik/butik-app/src/components/buy/Buy.js":"48","/home/pamo80/dev/projects/butik/butik-app/src/components/buy/Styles.js":"49","/home/pamo80/dev/projects/butik/butik-app/src/components/tab/Tab.js":"50","/home/pamo80/dev/projects/butik/butik-app/src/models/load/Load.js":"51","/home/pamo80/dev/projects/butik/butik-app/src/components/scan/ScanAuto.js":"52","/home/pamo80/dev/projects/butik/butik-app/src/components/scan/ScanManual.js":"53","/home/pamo80/dev/projects/butik/butik-app/src/components/scan/Styles.js":"54"},{"size":794,"mtime":1612368856096,"results":"55","hashOfConfig":"56"},{"size":3037,"mtime":1616431688796,"results":"57","hashOfConfig":"56"},{"size":5064,"mtime":1612368856096,"results":"58","hashOfConfig":"56"},{"size":364,"mtime":1612368856096,"results":"59","hashOfConfig":"56"},{"size":11806,"mtime":1616434703526,"results":"60","hashOfConfig":"56"},{"size":903,"mtime":1612368982033,"results":"61","hashOfConfig":"56"},{"size":1147,"mtime":1612368856092,"results":"62","hashOfConfig":"56"},{"size":630,"mtime":1612368856092,"results":"63","hashOfConfig":"56"},{"size":250,"mtime":1614179470966,"results":"64","hashOfConfig":"56"},{"size":1134,"mtime":1615975922816,"results":"65","hashOfConfig":"56"},{"size":998,"mtime":1615914176654,"results":"66","hashOfConfig":"56"},{"size":771,"mtime":1612368856092,"results":"67","hashOfConfig":"56"},{"size":4114,"mtime":1616003223442,"results":"68","hashOfConfig":"56"},{"size":1068,"mtime":1612368856088,"results":"69","hashOfConfig":"56"},{"size":2661,"mtime":1612369761540,"results":"70","hashOfConfig":"56"},{"size":3543,"mtime":1613489462734,"results":"71","hashOfConfig":"56"},{"size":468,"mtime":1612368856088,"results":"72","hashOfConfig":"56"},{"size":854,"mtime":1612368856088,"results":"73","hashOfConfig":"56"},{"size":295,"mtime":1612368856088,"results":"74","hashOfConfig":"56"},{"size":2628,"mtime":1616001437709,"results":"75","hashOfConfig":"56"},{"size":398,"mtime":1612368856088,"results":"76","hashOfConfig":"56"},{"size":1214,"mtime":1615908051536,"results":"77","hashOfConfig":"56"},{"size":1333,"mtime":1615907838425,"results":"78","hashOfConfig":"56"},{"size":4323,"mtime":1616016232051,"results":"79","hashOfConfig":"56"},{"size":798,"mtime":1612368856088,"results":"80","hashOfConfig":"56"},{"size":1700,"mtime":1615976552609,"results":"81","hashOfConfig":"56"},{"size":1262,"mtime":1612368856096,"results":"82","hashOfConfig":"56"},{"size":1239,"mtime":1612368856088,"results":"83","hashOfConfig":"56"},{"size":1296,"mtime":1615906186882,"results":"84","hashOfConfig":"56"},{"size":316,"mtime":1612368856092,"results":"85","hashOfConfig":"56"},{"size":218,"mtime":1612368856092,"results":"86","hashOfConfig":"56"},{"size":1163,"mtime":1612368856088,"results":"87","hashOfConfig":"56"},{"size":727,"mtime":1616441726475,"results":"88","hashOfConfig":"56"},{"size":693,"mtime":1612368856088,"results":"89","hashOfConfig":"56"},{"size":1612,"mtime":1616016161705,"results":"90","hashOfConfig":"56"},{"size":6609,"mtime":1616442963252,"results":"91","hashOfConfig":"56"},{"size":387,"mtime":1612368856092,"results":"92","hashOfConfig":"56"},{"size":1034,"mtime":1612368856092,"results":"93","hashOfConfig":"56"},{"size":1770,"mtime":1616017315691,"results":"94","hashOfConfig":"56"},{"size":6026,"mtime":1613562765696,"results":"95","hashOfConfig":"56"},{"size":145,"mtime":1613551277999,"results":"96","hashOfConfig":"56"},{"size":5659,"mtime":1616433283719,"results":"97","hashOfConfig":"56"},{"size":1756,"mtime":1615973899643,"results":"98","hashOfConfig":"56"},{"size":2880,"mtime":1616017474011,"results":"99","hashOfConfig":"56"},{"size":7861,"mtime":1614796147859,"results":"100","hashOfConfig":"56"},{"size":7807,"mtime":1616018019278,"results":"101","hashOfConfig":"56"},{"size":398,"mtime":1615884752617,"results":"102","hashOfConfig":"56"},{"size":1853,"mtime":1616441752811,"results":"103","hashOfConfig":"56"},{"size":398,"mtime":1612368856092,"results":"104","hashOfConfig":"56"},{"size":227,"mtime":1616431671560,"results":"105","hashOfConfig":"56"},{"size":1983,"mtime":1616441096229,"results":"106","hashOfConfig":"56"},{"size":2039,"mtime":1616443007295,"results":"107","hashOfConfig":"56"},{"size":2341,"mtime":1616443045042,"results":"108","hashOfConfig":"56"},{"size":1811,"mtime":1616432583280,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"12w29nz",{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"112"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"112"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"112"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"112"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"112"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"112"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"112"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},"/home/pamo80/dev/projects/butik/butik-app/src/index.js",[],["228","229"],"/home/pamo80/dev/projects/butik/butik-app/src/App.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/serviceWorkerRegistration.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/reportWebVitals.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/theme/Default.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/config/Client.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/loading/Loading.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/filter/Filter.js",[],["230","231"],"/home/pamo80/dev/projects/butik/butik-app/src/components/messageSystem/Message.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/messageSystem/MessageSystem.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/header/Header.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/footer/Footer.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Login.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Logout.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Forgot.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Reset.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/auth/PublicRoute.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/auth/PrivateRoute.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/auth/auth.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/config/auth.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Styles.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/footer/Styles.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/header/Styles.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/models/auth/auth.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/errorBoundary/ErrorBoundary.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/navbar/Navbar.js",["232","233","234"],"/*\n * Navbar\n */\n\nimport React from 'react';\nimport PublicNav from './PublicNav';\nimport PrivateNav from './PrivateNav';\nimport { AuthCheck } from \"components/auth/auth\";\nimport { Box, Avatar, Tooltip, Typography, LinkIcon } from '@material-ui/core';\nimport getIcon from 'models/icon/Icon';\nimport useStyles from './Styles';\n\nconst Navbar = () => {\n    const classes = useStyles(),\n          isAuth = AuthCheck();\n\n    const checkActiveRoot = (_, location) => {\n        if (!location) {\n            return false;\n        }\n        const {pathname} = location;\n\n        let start = [\"/\"];\n\n        return start.includes(pathname);\n    };\n\n    const NavIcon = (icon, name) => {\n        return (\n            <Box className={classes.navIcon}>\n                <Typography>\n                    { getIcon(icon) }\n                </Typography>\n\n                <Typography variant=\"button\">\n                    {name}\n                </Typography>\n            </Box>\n        )\n    }\n        \n    return (\n        <nav className={classes.nav}>\n            <PrivateNav to=\"/\" activeClassName=\"selected-nav\" isActive={ checkActiveRoot } name={NavIcon(\"Basket\", \"Handla\")} />\n            <PrivateNav to=\"/me\" className=\"auth\" activeClassName=\"selected-nav\" name={NavIcon(\"Me\", \"Mitt Konto\")} />\n            <PrivateNav to=\"/logout\" activeClassName=\"selected-nav\" name={NavIcon(\"Logout\", \"Logga Ut\")} />\n            {!isAuth && <PublicNav to=\"/register\" className=\"auth\" activeClassName=\"selected-nav\" name={NavIcon(\"Register\", \"Registrera\")} />}\n            {!isAuth && <PublicNav to=\"/login\" activeClassName=\"selected-nav\" name={NavIcon(\"Login\", \"Logga In\")} />}\n        </nav>\n    );\n};\n\nexport default Navbar;","/home/pamo80/dev/projects/butik/butik-app/src/models/db/db.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/controlbar/Controlbar.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/navbar/Styles.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/navbar/PrivateNav.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/navbar/PublicNav.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/controlbar/Styles.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/controlbar/RightSwitches.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/controlbar/LeftLinks.js",["235","236","237","238","239","240","241"],"/*\n * LeftLinks\n */\n\nimport React from 'react';\nimport { useAuthToken } from \"config/auth\";\nimport { Typography, Tooltip, IconButton, ButtonGroup } from '@material-ui/core';\nimport { uri } from \"config/Client\";\nimport getIcon from 'models/icon/Icon';\n\nconst Links = () => {\n    const [authToken] = useAuthToken();\n\n    const goTo = (where) => {\n        return window.open(where, \"_blank\");\n    }\n\n    const call = (where) => {\n        fetch(where, { headers: { 'authorization': `Bearer ${authToken}` } })\n        .then(() => window.location.reload());\n    };\n\n    return (\n        <ButtonGroup color=\"primary\" aria-label=\"Filter Switches\">\n        </ButtonGroup>\n    )\n}\n\nexport default Links;","/home/pamo80/dev/projects/butik/butik-app/src/components/controlbar/Selector.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/models/icon/Icon.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/messageSystem/Styles.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/loading/Styles.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/models/buy/buy.js",["242"],"/*\n * Graphql - Buy\n */\n\nimport { gql, useMutation } from '@apollo/client';\nimport { useItems } from \"config/auth\";\nimport { useMessage } from 'components/messageSystem/Message';\n\nexport const BUY = gql`\n    query getProduct ($barcode: String!) {\n        barcodes(where: { value: $barcode }) {\n            value\n            qty\n            product {\n                id\n                name\n                price\n                stock\n            }\n        }\n    }\n`;\n\nexport const DEPARTMENTS = gql`\n    query getDepartments {\n        departments {\n            id\n            name\n        }\n    }\n`;\n\nexport const CHECKOUT = gql`\n    mutation createSale($input: createSaleInput!) {\n        createSale(input: $input) {\n            sale {\n                firstname\n                lastname\n                total\n                items {\n                    name\n                    quantity\n                    price\n                }\n                department {\n                    id\n                    name\n                }\n            }\n        }\n    }\n`;\n\nexport const useCreateSale = () => {\n    const [, setItems, removeItems] = useItems(),\n          messageContext = useMessage(),\n          setMessage = messageContext.setMessage;\n\n    const [createSaleMutation] = useMutation(CHECKOUT, {\n        onError: (err) => {\n            console.log(err);\n            setMessage({ open: true, text: `Ursäkta, något gick fel!`, severity: \"error\" });\n        },\n        onCompleted: () => {\n            setItems([]);\n            setMessage({ open: true, text: `Klart!  Handla igen eller logga ut.`, severity: \"success\" });\n        }\n    });\n\n    const createSale = (input) => {\n        return createSaleMutation({ variables: { input } });\n    }\n\n    return createSale;\n};","/home/pamo80/dev/projects/butik/butik-app/src/models/utils/utils.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/basket/Styles.js",[],["243","244"],"/home/pamo80/dev/projects/butik/butik-app/src/components/basket/Basket.js",["245"],"/*\n * Basket\n */\n\nimport React, { useState, Fragment } from 'react';\nimport getIcon from 'models/icon/Icon';\nimport utils from 'models/utils/utils';\nimport { useItems } from \"config/auth\";\nimport {\n    Badge, Typography, TextField, ButtonGroup, IconButton, Table,\n    TableBody, TableCell, TableContainer, TableHead, TableRow\n} from '@material-ui/core';\n\nconst Basket = () => {\n    const currency = utils.currency,\n          quantity = utils.quantity,\n          [items, setItems] = useItems();\n\n    const increase = (barcode) => {\n        let itemToChange = items.find(row => row.item.value === barcode);\n\n        itemToChange.qty += itemToChange.item.qty;\n        setItems(items);\n    };\n\n    const decrease = (barcode) => {\n        let itemToChange = items.find(row => row.item.value === barcode);\n\n        if (itemToChange.qty - itemToChange.item.qty > 0) {\n            itemToChange.qty -= itemToChange.item.qty;\n\n            setItems(items);\n        } else if (itemToChange.qty - itemToChange.item.qty === 0) {\n            remove(barcode);\n        }\n    };\n\n    const setQty = (barcode, qty) => {\n        if (Number.isInteger(qty) && qty > 0) {\n            let itemToChange = items.find(row => row.item.value === barcode);\n\n            itemToChange.qty = qty;\n\n            setItems(items);\n        } else if (Number.isInteger(qty) && qty === 0) {\n            remove(barcode);\n        }\n    };\n\n    const remove = (barcode) => {\n        let updatedItems = items.filter(row => row.item.value !== barcode);\n\n        setItems(updatedItems);\n    };\n\n    return (\n        <Fragment>\n            <Typography variant=\"h3\" align=\"center\" gutterBottom>\n                {`Min korg: `}\n                <Badge badgeContent={items.length} color=\"error\">\n                    { getIcon(\"Basket\") }\n                </Badge>\n            </Typography>\n\n            <TableContainer className=\"table-container\">\n                <Table className=\"table\" aria-label=\"Person invoice table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell width=\"10%\"></TableCell>\n                            <TableCell width=\"35%\">Produkt</TableCell>\n                            <TableCell width=\"10%\">Förpackning</TableCell>\n                            <TableCell width=\"10%\">Pris/st</TableCell>\n                            <TableCell width=\"10%\">Total</TableCell>\n                            <TableCell width=\"25%\" align=\"center\">Antal</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    {items.length > 0 && (\n                    <TableBody>\n                        {items.map((row, i) => {\n                            return (\n                                <TableRow key={`item-${i}`}>\n                                    <TableCell>\n                                        <IconButton\n                                            color=\"primary\"\n                                            variant=\"contained\"\n                                            onClick={() => remove(row.item.value)}\n                                        >\n                                            {getIcon(\"Delete\")}\n                                        </IconButton>\n                                    </TableCell>\n                                    <TableCell>{row.item.product.name}</TableCell>\n                                    <TableCell>{quantity(row.item.qty)}</TableCell>\n                                    <TableCell>{currency(row.item.product.price)}</TableCell>\n                                    <TableCell>{currency(row.qty * row.item.product.price)}</TableCell>\n                                    <TableCell>\n                                        <ButtonGroup>\n                                            <IconButton\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                onClick={() => decrease(row.item.value)}\n                                            >\n                                                {getIcon(\"Minus\")}\n                                            </IconButton>\n\n                                            <TextField\n                                                id=\"amount\"\n                                                name=\"amount\"\n                                                label=\"Antal\"\n                                                type=\"text\"\n                                                value={row.qty}\n                                                required\n                                                variant=\"filled\"\n                                                onChange={(e) => setQty(row.item.value, parseInt(e.target.value))}\n                                            />\n\n                                            <IconButton\n                                                color=\"primary\"\n                                                variant=\"contained\"\n                                                onClick={() => increase(row.item.value)}\n                                            >\n                                                {getIcon(\"Plus\")}\n                                            </IconButton>\n                                        </ButtonGroup>\n                                    </TableCell>\n                                </TableRow>\n                            )\n                        })}\n                    </TableBody>\n                    )}\n                </Table>\n            </TableContainer>\n        </Fragment>\n    )\n}\n\nexport default Basket;","/home/pamo80/dev/projects/butik/butik-app/src/components/checkout/Styles.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/checkout/Checkout.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/auth/Register.js",["246","247"],"/*\n * Register\n */\n\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useLoadingEffect } from \"components/loading/Loading\";\nimport { useHistory } from 'react-router-dom';\nimport { useMessage } from 'components/messageSystem/Message';\nimport { DEPARTMENTS } from 'models/buy/buy.js';\nimport { useRegisterUser } from 'models/auth/auth.js';\nimport { Grid, Typography, FormControlLabel, Checkbox, Button, TextField } from '@material-ui/core';\nimport useStyles from './Styles';\n\nconst Register = () => {\n    const title = \"Registrera\",\n          [check, setCheck] = useState(false),\n          [department, setDepartment] = useState(\"start\"),\n          [password1, setPassword1] = useState(\"\"),\n          [password2, setPassword2] = useState(\"\"),\n          [registerUser] = useRegisterUser(),\n          classes = useStyles();\n    \n    const register = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData(e.target);\n\n        let data = {\n            \"username\": formData.get(\"username\"),\n            \"firstname\": formData.get(\"firstname\"),\n            \"lastname\": formData.get(\"lastname\"),\n            \"email\": formData.get(\"email\"),\n            \"department\": formData.get(\"department\"),\n            \"password\": formData.get(\"password\"),\n            \"confirmed\": true,\n            \"blocked\": false\n        };\n\n        registerUser(data);\n    };\n\n    /*---- Data query start ----*/\n    const { loading, error, data } = useQuery(DEPARTMENTS);\n\n    useLoadingEffect(loading);\n\n    error && console.log(`Error! ${error.message}`);\n    /*---- Data query end ----*/\n\n    return (\n        <Grid container className=\"page-container\">\n            <Grid item xs={12} className={`banner ${classes.pageBanner}`}>\n                <Typography variant=\"h1\">{title}</Typography>\n            </Grid>\n\n            <Grid container spacing={4} justify=\"center\" className=\"page\">\n                <Grid container spacing={4} justify=\"center\" className=\"page\">\n                    <Grid item xs={12} sm={6}>\n                        <form className=\"form\" onSubmit={register}>\n                            <TextField\n                                id=\"person-username\"\n                                name=\"username\"\n                                label=\"Tag\"\n                                type=\"text\"\n                                size=\"small\"\n                                variant=\"filled\"\n                                required\n                                InputProps={{ disableUnderline: true }}\n                                autoFocus={true}\n                            />\n\n                            <TextField\n                                id=\"person-firstname\"\n                                name=\"firstname\"\n                                label=\"Förnamn\"\n                                type=\"text\"\n                                size=\"small\"\n                                variant=\"filled\"\n                                required\n                                InputProps={{ disableUnderline: true }}\n                            />\n\n                            <TextField\n                                id=\"person-lastname\"\n                                name=\"lastname\"\n                                label=\"Efternamn\"\n                                type=\"text\"\n                                size=\"small\"\n                                variant=\"filled\"\n                                required\n                                InputProps={{ disableUnderline: true }}\n                            />\n\n                            <TextField\n                                id=\"person-email\"\n                                name=\"email\"\n                                label=\"Epost\"\n                                type=\"email\"\n                                size=\"small\"\n                                variant=\"filled\"\n                                required\n                                InputProps={{ disableUnderline: true }}\n                            />\n\n                            <TextField\n                                className={classes.invoiceInput}\n                                id=\"department\"\n                                name=\"department\"\n                                label=\"Förvald Enhet\"\n                                select\n                                SelectProps={{\n                                    native: true,\n                                }}\n                                value={department}\n                                required\n                                variant=\"filled\"\n                                onChange={(e) => setDepartment(e.target.value)}\n                            >\n                                <option key={`bill-01`} value={\"start\"} disabled>Välj här</option>\n\n                                {data && data.departments.map((d, i) => (\n                                    <option key={`department-${i}`} value={d.id}>\n                                        {d.name}\n                                    </option>\n                                ))}\n                            </TextField>\n\n                            <TextField\n                                className=\"password\"\n                                id=\"person-password-1\"\n                                name=\"password\"\n                                label=\"Pinkod\"\n                                type={!check ? \"password\" : \"text\"}\n                                size=\"small\"\n                                variant=\"filled\"\n                                required\n                                value={password1}\n                                onChange={(e) => /^[0-9]{0,4}$/.test(e.target.value) && setPassword1(e.target.value)}\n                                InputProps={{ disableUnderline: true }}\n                            />\n\n                            <TextField\n                                className=\"password\"\n                                id=\"person-password-2\"\n                                name=\"password2\"\n                                label=\"Bekräfta Pinkod\"\n                                type={!check ? \"password\" : \"text\"}\n                                size=\"small\"\n                                variant=\"filled\"\n                                required\n                                value={password2}\n                                error={password1 !== password2}\n                                onChange={(e) => /^[0-9]{0,4}$/.test(e.target.value) && setPassword2(e.target.value)}\n                                InputProps={{ disableUnderline: true }}\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={check}\n                                        onChange={() => setCheck(!check)}\n                                        name=\"checkedB\"\n                                        style={{ color: \"white\" }}\n                                    />\n                                }\n                                label={`${check ? \"Dölja\" : \"Visa\"} pinkod`}\n                            />\n                            \n                            <Button\n                                name=\"login\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                size=\"large\"\n                                variant=\"contained\"\n                                disabled={password1 !== password2}\n                            >\n                                Registrera\n                            </Button>\n                        </form>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default Register;","/home/pamo80/dev/projects/butik/butik-app/src/components/me/Me.js",["248"],"/*\n * Me\n */\n\nimport React, { useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useLoadingEffect } from \"components/loading/Loading\";\nimport { useUser } from \"config/auth\";\nimport { useMessage } from 'components/messageSystem/Message';\nimport { DEPARTMENTS } from 'models/buy/buy.js';\nimport { useUpdateUser } from 'models/auth/auth.js';\nimport { Grid, Typography, FormControlLabel, Checkbox, Button, TextField } from '@material-ui/core';\nimport useStyles from './Styles';\n\nconst Me = () => {\n    const title = \"Mitt Konto\",\n          [check, setCheck] = useState(false),\n          [user] = useUser(),\n          [firstname, setFirstname] = useState(user.info.firstname),\n          [lastname, setLastname] = useState(user.info.lastname),\n          [email, setEmail] = useState(user.email),\n          [department, setDepartment] = useState(user.info.department.id),\n          [password1, setPassword1] = useState(\"\"),\n          [password2, setPassword2] = useState(\"\"),\n          [updateUser] = useUpdateUser(),\n          classes = useStyles();\n    \n    const save = (e) => {\n        e.preventDefault();\n\n        const where = {\n            id: user.id\n        };\n\n        const data = {\n            firstname,\n            lastname,\n            email,\n            department\n        };\n\n        password2 && password1 === password2 && (data.password = password2);\n\n        updateUser(where, data)\n        .then(() => { setPassword1(\"\"); setPassword2(\"\") });\n    };\n\n    /*---- Data query start ----*/\n    const { loading, error, data } = useQuery(DEPARTMENTS);\n\n    useLoadingEffect(loading);\n\n    error && console.log(`Error! ${error.message}`);\n    /*---- Data query end ----*/\n\n    return (\n        <Grid container className=\"page-container\">\n            <Grid item xs={12} className={`banner ${classes.pageBanner}`}>\n                <Typography variant=\"h1\">{title}</Typography>\n            </Grid>\n\n            <Grid container spacing={4} justify=\"center\" className=\"page\">\n                <Grid container spacing={4} justify=\"center\" className=\"page\">\n                    <Grid item xs={12} sm={6}>\n                        <form className=\"form\" onSubmit={save}>\n                            <TextField\n                                id=\"person-firstname\"\n                                name=\"firstname\"\n                                label=\"Förnamn\"\n                                type=\"text\"\n                                size=\"small\"\n                                variant=\"filled\"\n                                required\n                                value={firstname}\n                                onChange={e => setFirstname(e.target.value)}\n                                InputProps={{ disableUnderline: true }}\n                            />\n\n                            <TextField\n                                id=\"person-lastname\"\n                                name=\"lastname\"\n                                label=\"Efternamn\"\n                                type=\"text\"\n                                size=\"small\"\n                                variant=\"filled\"\n                                required\n                                value={lastname}\n                                onChange={e => setLastname(e.target.value)}\n                                InputProps={{ disableUnderline: true }}\n                            />\n\n                            <TextField\n                                id=\"person-email\"\n                                name=\"email\"\n                                label=\"Epost\"\n                                type=\"email\"\n                                size=\"small\"\n                                variant=\"filled\"\n                                required\n                                value={email}\n                                onChange={e => setEmail(e.target.value)}\n                                InputProps={{ disableUnderline: true }}\n                            />\n\n                            <TextField\n                                id=\"department\"\n                                name=\"department\"\n                                label=\"Förvald Enhet\"\n                                select\n                                variant=\"filled\"\n                                required\n                                value={department}\n                                onChange={(e) => setDepartment(e.target.value)}\n                                SelectProps={{\n                                    native: true,\n                                }}\n                            >\n                                <option key={`bill-01`} value={\"start\"} disabled>Välj här</option>\n\n                                {data && data.departments.map((d, i) => (\n                                    <option key={`department-${i}`} value={d.id}>\n                                        {d.name}\n                                    </option>\n                                ))}\n                            </TextField>\n\n                            <TextField\n                                className=\"password\"\n                                id=\"person-password-1\"\n                                name=\"password1\"\n                                label=\"Ny Pinkod\"\n                                type={!check ? \"password\" : \"text\"}\n                                size=\"small\"\n                                variant=\"filled\"\n                                required={password2 && true}\n                                value={password1}\n                                onChange={(e) => /^[0-9]{0,4}$/.test(e.target.value) && setPassword1(e.target.value)}\n                                InputProps={{ disableUnderline: true }}\n                            />\n\n                            <TextField\n                                className=\"password\"\n                                id=\"person-password-2\"\n                                name=\"password2\"\n                                label=\"Bekräfta Ny Pinkod\"\n                                type={!check ? \"password\" : \"text\"}\n                                size=\"small\"\n                                variant=\"filled\"\n                                required={password1 && true}\n                                value={password2}\n                                error={password2 && password2.length === 4 && password1 !== password2}\n                                onChange={(e) => /^[0-9]{0,4}$/.test(e.target.value) && setPassword2(e.target.value)}\n                                InputProps={{ disableUnderline: true }}\n                            />\n\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        checked={check}\n                                        onChange={() => setCheck(!check)}\n                                        name=\"checkedB\"\n                                        style={{ color: \"white\" }}\n                                    />\n                                }\n                                label={`${check ? \"Dölja\" : \"Visa\"} pinkod`}\n                            />\n                            \n                            <Button\n                                name=\"login\"\n                                type=\"submit\"\n                                color=\"primary\"\n                                size=\"large\"\n                                variant=\"contained\"\n                                disabled={password1 !== password2}\n                            >\n                                Spara\n                            </Button>\n                        </form>\n                    </Grid>\n                </Grid>\n            </Grid>\n        </Grid>\n    )\n};\n\nexport default Me;","/home/pamo80/dev/projects/butik/butik-app/src/components/me/Styles.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/buy/Buy.js",["249"],"/*\n * Buy\n */\n\nimport React, { useEffect } from 'react';\nimport ScanAuto from 'components/scan/ScanAuto';\nimport ScanManual from 'components/scan/ScanManual';\nimport Basket from 'components/basket/Basket';\nimport Checkout from 'components/checkout/Checkout';\nimport { useUser } from \"config/auth\";\nimport { useMessage } from 'components/messageSystem/Message';\nimport { useTab } from \"components/tab/Tab\";\nimport { Grid, Typography } from '@material-ui/core';\nimport { TabContext, TabPanel } from '@material-ui/lab';\nimport useStyles from './Styles';\n\nconst Buy = () => {\n    const title = \"Handla\",\n          tabContext = useTab(),\n          tab = tabContext.tab,\n          [user] = useUser(),\n          messageContext = useMessage(),\n          setMessage = messageContext.setMessage,\n          classes = useStyles();\n    \n    useEffect(() => {\n        setMessage({ open: true, text: `Hej ${user.info.firstname}! Ta skannern till höger och börja handla!`, severity: \"success\" });\n    }, []);\n\n    return (\n        <Grid container className=\"page-container\">\n            <Grid item xs={12} className={`banner ${classes.pageBanner}`}>\n                <Typography variant=\"h1\">{title}</Typography>\n            </Grid>\n\n            <Grid container spacing={4} className=\"page\">\n                <Grid item xs={12} sm={6}>\n                    <TabContext value={tab}>\n                        <TabPanel value={0}>\n                            <ScanAuto />\n                        </TabPanel>\n\n                        <TabPanel value={1}>\n                            <ScanManual />\n                        </TabPanel>\n                    </TabContext>\n                </Grid>\n\n                <Grid item xs={12} sm={6}><Checkout /></Grid>\n\n                <Grid item xs={12}><Basket /></Grid>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default Buy;","/home/pamo80/dev/projects/butik/butik-app/src/components/buy/Styles.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/tab/Tab.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/models/load/Load.js",[],"/home/pamo80/dev/projects/butik/butik-app/src/components/scan/ScanAuto.js",["250","251"],"/home/pamo80/dev/projects/butik/butik-app/src/components/scan/ScanManual.js",["252"],"/home/pamo80/dev/projects/butik/butik-app/src/components/scan/Styles.js",[],{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"253","replacedBy":"257"},{"ruleId":"255","replacedBy":"258"},{"ruleId":"259","severity":1,"message":"260","line":9,"column":15,"nodeType":"261","messageId":"262","endLine":9,"endColumn":21},{"ruleId":"259","severity":1,"message":"263","line":9,"column":23,"nodeType":"261","messageId":"262","endLine":9,"endColumn":30},{"ruleId":"259","severity":1,"message":"264","line":9,"column":44,"nodeType":"261","messageId":"262","endLine":9,"endColumn":52},{"ruleId":"259","severity":1,"message":"265","line":7,"column":10,"nodeType":"261","messageId":"262","endLine":7,"endColumn":20},{"ruleId":"259","severity":1,"message":"263","line":7,"column":22,"nodeType":"261","messageId":"262","endLine":7,"endColumn":29},{"ruleId":"259","severity":1,"message":"266","line":7,"column":31,"nodeType":"261","messageId":"262","endLine":7,"endColumn":41},{"ruleId":"259","severity":1,"message":"267","line":8,"column":10,"nodeType":"261","messageId":"262","endLine":8,"endColumn":13},{"ruleId":"259","severity":1,"message":"268","line":9,"column":8,"nodeType":"261","messageId":"262","endLine":9,"endColumn":15},{"ruleId":"259","severity":1,"message":"269","line":14,"column":11,"nodeType":"261","messageId":"262","endLine":14,"endColumn":15},{"ruleId":"259","severity":1,"message":"270","line":18,"column":11,"nodeType":"261","messageId":"262","endLine":18,"endColumn":15},{"ruleId":"259","severity":1,"message":"271","line":55,"column":24,"nodeType":"261","messageId":"262","endLine":55,"endColumn":35},{"ruleId":"253","replacedBy":"272"},{"ruleId":"255","replacedBy":"273"},{"ruleId":"259","severity":1,"message":"274","line":5,"column":17,"nodeType":"261","messageId":"262","endLine":5,"endColumn":25},{"ruleId":"259","severity":1,"message":"275","line":8,"column":10,"nodeType":"261","messageId":"262","endLine":8,"endColumn":20},{"ruleId":"259","severity":1,"message":"276","line":9,"column":10,"nodeType":"261","messageId":"262","endLine":9,"endColumn":20},{"ruleId":"259","severity":1,"message":"276","line":9,"column":10,"nodeType":"261","messageId":"262","endLine":9,"endColumn":20},{"ruleId":"277","severity":1,"message":"278","line":28,"column":8,"nodeType":"279","endLine":28,"endColumn":10,"suggestions":"280"},{"ruleId":"259","severity":1,"message":"281","line":10,"column":10,"nodeType":"261","messageId":"262","endLine":10,"endColumn":15},{"ruleId":"259","severity":1,"message":"282","line":14,"column":12,"nodeType":"261","messageId":"262","endLine":14,"endColumn":17},{"ruleId":"259","severity":1,"message":"283","line":14,"column":12,"nodeType":"261","messageId":"262","endLine":14,"endColumn":13},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],["284"],["285"],"no-unused-vars","'Avatar' is defined but never used.","Identifier","unusedVar","'Tooltip' is defined but never used.","'LinkIcon' is defined but never used.","'Typography' is defined but never used.","'IconButton' is defined but never used.","'uri' is defined but never used.","'getIcon' is defined but never used.","'goTo' is assigned a value but never used.","'call' is assigned a value but never used.","'removeItems' is assigned a value but never used.",["284"],["285"],"'useState' is defined but never used.","'useHistory' is defined but never used.","'useMessage' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setMessage' and 'user.info.firstname'. Either include them or remove the dependency array.","ArrayExpression",["286"],"'Badge' is defined but never used.","'items' is assigned a value but never used.","'_' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"287","fix":"288"},"Update the dependencies array to be: [setMessage, user.info.firstname]",{"range":"289","text":"290"},[988,990],"[setMessage, user.info.firstname]"]